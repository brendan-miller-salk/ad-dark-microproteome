import sys


class PipelineStructure:
    def __init__(self, args):
        self.args = args
        """
        Defines the output directories.
        """
        self.outdir = args.outdir
        
    def set_annotation_attributes(self):
        """
        Defines the attributes for the training mode.
        """
        self.__define_input_files()
        self.__define_output_files()
        
    def __define_input_files(self):
        """
        Defines the attributes for the input files provided by the user.
        """

        if self.args.mode == 'smorf_types':
            self.smorf_gtf = self.args.smorf_gtf
            self.ensembl_gtf = self.args.ensembl_gtf
            self.intersect_output = self.args.intersect_output
            self.non_intersect_output = self.args.non_intersect_output

    def __define_output_files(self):
        """
        Defines the attributes for the output files generated by the pipeline.
        """
        # Define the output files
        if self.args.mode == 'smorf_types':
            self.intersect_output = self.args.intersect_output
            self.non_intersect_output = self.args.non_intersect_output
        else:
            sys.exit(f"Mode '{self.args.mode}' not recognized. Please choose a valid mode.")